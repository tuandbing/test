<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--开启扫描包-->
    <context:component-scan base-package="com.eagles.ssm"/>

    <!--读取配置文件获取数据源信息-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--配置数据源对象-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <!--注入数据源信息-->
        <property name="url" value="${db.url}"/>
        <property name="driverClassName" value="${db.driver}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <!--配置mybatis需要的工厂对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源信息-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置mapper映射器-->
        <property name="mapperLocations" value="classpath:com/eagles/ssm/mapper/*.xml"/>
    </bean>

    <!--配置mybatis的扫描器-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--spring会扫描持久层所有的接口，mybatis会创建接口对应的代理对象(接口实现类)，将实现类的实例转载进spring核心容器中-->
        <property name="basePackage" value="com.eagles.ssm.mapper"/>
    </bean>


</beans>